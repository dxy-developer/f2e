<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hybrid on 丁香园前端小分队</title>
    <link>http://dxy-developer.github.io/f2e/tags/hybrid/</link>
    <description>Recent content in Hybrid on 丁香园前端小分队</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Establishment · 丁香园前端</copyright>
    <lastBuildDate>Mon, 04 Apr 2016 06:32:51 +0000</lastBuildDate>
    <atom:link href="http://dxy-developer.github.io/f2e/tags/hybrid/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>hybrid资源包增量更新机制</title>
      <link>http://dxy-developer.github.io/f2e/blog/2016/04/04/hybrid%E8%B5%84%E6%BA%90%E5%8C%85%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 04 Apr 2016 06:32:51 +0000</pubDate>
      
      <guid>http://dxy-developer.github.io/f2e/blog/2016/04/04/hybrid%E8%B5%84%E6%BA%90%E5%8C%85%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6/</guid>
      <description>

&lt;p&gt;从&lt;code&gt;丁香医生&lt;/code&gt;app决定使用&lt;code&gt;hybrid&lt;/code&gt;到现在已有一段时间。前端资源包的大小接近&lt;code&gt;360KB&lt;/code&gt;。并且pm会不时的提出一些小的需求，可能是一些样式的调整，也可能是新的活动页面，因此发布十分频繁。&lt;/p&gt;

&lt;p&gt;丁香医生hybrid开发遇到的问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;频繁的发布，很小的改动，尺寸不断增加的资源包。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;丁香医生hybrid开发资源更新机制的现状&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;使用原始的全量更新,即每一次发布，对于终端用户都必须下载完整的资源包，尽管资源包的变动很小。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;面对以上问题和现状，需要新的资源更新机制。他的核心功能是&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;支持全量更新，增量更新&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;设计:10d8aa81d13021669fdcd5a46901e0c0&#34;&gt;设计&lt;/h2&gt;

&lt;p&gt;资源增量更新机制是在如下前提下设计的&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;没有后台程序员提供支持。（跨部门推一个方案感觉很麻烦）&lt;/li&gt;
&lt;li&gt;尽量简单。(开发，部署)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最终的增量更新机制如下&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;由前端进行历代版本资源包的diff，生成不同版本之间的增量包（增量包为变动的文件和变动详情配置文件的压缩包）&lt;/li&gt;
&lt;li&gt;使用已有的前端资源发布机制进行资源的发布&lt;/li&gt;
&lt;li&gt;客户端根据配置文件，获取相应的增量包，进行patch&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;diff-patch:10d8aa81d13021669fdcd5a46901e0c0&#34;&gt;diff&amp;amp;patch&lt;/h2&gt;

&lt;p&gt;找 node, swift, java都支持的 diff&amp;amp;patch 第三方库好麻烦。&lt;/p&gt;

&lt;p&gt;最终采用的方案将diff的粒度增大到文件。根据文件内容的hash值是否不同，来决定是否进行文件的全量更新。因此最终的diff&amp;amp;patch算法是简单文件内容比较和文件增、删、替换操作。虽然不是最好的，但是它足够简单，实用。&lt;/p&gt;

&lt;h2 id=&#34;gulp插件-https-github-com-alexayan-gulp-assets-incremental-update:10d8aa81d13021669fdcd5a46901e0c0&#34;&gt;&lt;a href=&#34;https://github.com/alexayan/gulp-assets-incremental-update&#34;&gt;gulp插件&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;通过前端构建工具使版本方便的发布&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install gulp-assets-incremental-update --save-dev&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//gulpfile.js
require(&#39;gulp-assets-incremental-update&#39;)(gulp, {
    publish_folder : publish_folder,//资源发布目录
    name : &#39;article_detail.zip&#39;,//zip包名
    assets_folder : assets, //本地资源目录
    base_url : base_url //线上资源路径 {base_url}/1/2/{name}
});

gulp.task(&#39;publish&#39;, [&#39;assets-incremental-update&#39;] , function(){});

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;gulp publish&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>