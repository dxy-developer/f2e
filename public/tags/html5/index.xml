<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html5 on 丁香园前端小分队</title>
    <link>http://dxy-developer.github.io/f2e/tags/html5/</link>
    <description>Recent content in Html5 on 丁香园前端小分队</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Establishment · 丁香园前端</copyright>
    <lastBuildDate>Tue, 05 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://dxy-developer.github.io/f2e/tags/html5/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTML5 drag and drop</title>
      <link>http://dxy-developer.github.io/f2e/blog/2016/04/05/html5-drag-and-drop/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://dxy-developer.github.io/f2e/blog/2016/04/05/html5-drag-and-drop/</guid>
      <description>

&lt;hr /&gt;

&lt;h4 id=&#34;拖放简介:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;拖放简介：&lt;/h4&gt;

&lt;p&gt;拖放操作的过程是怎样的？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;允许用户在一个元素上点击并按住鼠标按钮，拖动它到别的位置，然后松开鼠标，元素停留在该位置。在拖动的过程中，被拖动元素以半透明的形式展现，并跟随鼠标指针移动。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在早期的 IE4 中的网页上，只有文本和图片可以拖动，并且唯一有效的放置目标就是文本框。随着浏览器的发展，拖放功能也得到扩展，现在几乎网页中的任何元素都可以拖放，并且任何元素都可以作为放置目标。&lt;/p&gt;

&lt;p&gt;HTML5 就以 IE 的实例为基础制定了拖放规范。现对其主要内容做了整理。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;拖放步骤:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;拖放步骤：&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;定义可拖放目标&lt;/li&gt;
&lt;li&gt;定义被拖动的数据&lt;/li&gt;
&lt;li&gt;定义拖动过程中鼠标指针旁边出现的反馈图片&lt;/li&gt;
&lt;li&gt;允许设置拖拽效果&lt;/li&gt;
&lt;li&gt;定义放置区域&lt;/li&gt;
&lt;li&gt;拖放结束时，完成数据交互等工作&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;帮助实现拖放的一些特性:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;帮助实现拖放的一些特性：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt;：&lt;code&gt;draggable&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;设为 true，则该元素可拖放&lt;/li&gt;
&lt;li&gt;在 html 中，图片、超链接、被选中文本，这些元素默认就是可拖拽，可以不用设置该属性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div draggable=&amp;quot;true&amp;quot; ondragstart=&amp;quot;event.dataTransfer.setData(&#39;text/plain&#39;, &#39;这里是想要拖动的元素&#39;)&amp;quot;&amp;gt;
  这里是想要拖动的元素
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;事件&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;事件的目标是被拖动的元素

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dragstart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drag&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dragend&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;事件的目标是作为放置目标（droptarget）的元素

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dragenter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dragover&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dragleave&lt;/code&gt;/&lt;code&gt;drop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;对象&lt;/strong&gt;：&lt;code&gt;event.dataTransfer&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用于实现数据交换，可在拖放事件的事件处理程序中访问&lt;/li&gt;
&lt;li&gt;方法：&lt;code&gt;setData()&lt;/code&gt;，设置拖放要传递的数据

&lt;ul&gt;
&lt;li&gt;参数1: text/URL，表示保存的数据类型（HTML5 允许各种 MIME 类型，但 IE 只支持着两种）&lt;/li&gt;
&lt;li&gt;参数2: 要保存的数据&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;方法：&lt;code&gt;getData()&lt;/code&gt;，获取拖放传递的数据，只能在 &lt;code&gt;drop&lt;/code&gt; 事件处理程序中使用&lt;/li&gt;
&lt;li&gt;属性：&lt;code&gt;dropEffect&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;值：none/move/copy/link，&lt;/li&gt;
&lt;li&gt;表示元素拖动到 droptarget 上时鼠标的效果&lt;/li&gt;
&lt;li&gt;必须在 ondragenter 事件中使用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;属性：&lt;code&gt;effectAllowed&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;值：none/move/copt/link/all/&amp;hellip;&lt;/li&gt;
&lt;li&gt;跟 dropeffect 搭配使用，表示允许拖动元素的哪种 dropeffect&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;代码示例:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;代码示例：&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    $(被拖动元素).on(&amp;quot;dragstart&amp;quot;, function (e) {
        /*开始拖拽源文本*/         
        e.preventDefault();
        e.dataTransfer.effectAllowed = &amp;quot;move&amp;quot;;
        e.originalEvent.dataTransfer.setData(&amp;quot;text&amp;quot;, &#39;要传递的数据&#39;);
        return true;
    });

    $(被拖动元素).on(&amp;quot;dragend&amp;quot;,  function(ev) {
        /*拖拽结束*/
        ev.dataTransfer.clearData(&amp;quot;text&amp;quot;);
        eleDrag = null;
        return false
    });

    $(放置目标元素).on(&amp;quot;dragover&amp;quot;, function (e) {
        /*拖拽元素在目标元素头上移动的时候*/
        e.preventDefault();
        return true;
    });

    $(放置目标元素).on(&amp;quot;dragenter&amp;quot;,  function(ev) {
        /*拖拽元素进入目标元素头上的时候*/
        return true;
    });

    $(放置目标元素).on(&amp;quot;drop&amp;quot;, function (e) {               
        /*拖拽元素进入目标元素头上，同时鼠标松开的时候*/
        var data = e.originalEvent.dataTransfer.getData(&amp;quot;text&amp;quot;);
        /*阻止在Firefox中拖拽打开新标签*/
        return false;
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;注意点:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;注意点：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在 dragstart 事件中必须使用 &lt;code&gt;event.preventDefault()&lt;/code&gt;，否则 drag 事件不能触发，也就不能实现拖拽&lt;/li&gt;
&lt;li&gt;在 dragover 事件中也必须使用 &lt;code&gt;event.preventDefault()&lt;/code&gt;，否则 drop 事件不会触发&lt;/li&gt;
&lt;li&gt;需在 drop 事件中使用 &lt;code&gt;return false;&lt;/code&gt;， 解决 Firefox 中拖拽元素会直接打开新标签的问题&lt;/li&gt;
&lt;li&gt;为了减少事件，可以在 dragenter 的时候绑定方法 ，而 dragleave 的时候删除方法&lt;/li&gt;
&lt;li&gt;在 dragover 上不要做数据处理，它类似mouseover，在拖动的过程中会不断触发，可能会导致浏览器崩溃&lt;/li&gt;
&lt;li&gt;drag 事件和 mouse 事件不能同时触发&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;兼容性:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;兼容性：&lt;/h4&gt;

&lt;p&gt;浏览器支持：IE10+、Firefox 4+、Safari 5+和Chrome。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文档:1736164b2264d1395a37ad0ce62d38a4&#34;&gt;参考文档：&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/DragDrop/Drag_and_Drop&#34;&gt;拖放操作&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/2011/02/html5-drag-drop-%E6%8B%96%E6%8B%BD%E4%B8%8E%E6%8B%96%E6%94%BE%E7%AE%80%E4%BB%8B/&#34;&gt;HTML5 drag &amp;amp; drop 拖拽与拖放简介&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>